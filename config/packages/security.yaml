security:
    encoders:
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_SUPER_ADMIN: [ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
#            anonymous: lazy
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: security_login
                use_referer: true
            pattern: ^/
            user_checker: App\Security\UserChecker
            custom_authenticators:
                    - app.security.login_form_authenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                domain: ~ # Prend la valeur par d√©faut du domaine courant depuis $_SERVER
                name: REMEMBERME
                always_remember_me: true
                remember_me_parameter: _remember_me

            logout:
                path: security_logout
                target: security_login
                # where to redirect after logout
                # target: app_any_route

            access_denied_handler: App\Security\AccessDeniedHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    enable_authenticator_manager: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/security, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/admins, roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN, ROLE_SUPER_ADMIN], requires_channel: https }
        - { path: ^/profil, roles: [IS_AUTHENTICATED_FULLY, ROLE_USER], requires_channel: https }
        - { path: ^/efconnect, roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN, ROLE_SUPER_ADMIN], requires_channel: https }
        - { path: ^/elfinder, roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN, ROLE_SUPER_ADMIN], requires_channel: https }